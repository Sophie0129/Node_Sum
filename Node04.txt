day03 수업 폴더가 day04 수업내용 (session)

req.session.name = "홍길동"; //세션의 키(네임)을 홍길동으로 만든다

delete req.session.name; //하나의 세션을 삭제
req.session.destroy(); //모든 세션을 삭제시킴 디스트로이

console.log(req.body) //포스트방식은 바디로 처리


onst setSession = (req, res) => {
    console.log("셋 세션");
    req.session.name = "홍길동"
    req.session.age = 20;
    res.render("session/set_session")
   
}

const getSession = (req, res) => {
    const sessionValue = {
        name : req.session.name,
        age : req.session.age}
    res.render("session/get_session", sessionValue)
}

setSession에서 만든 값을 getSession에서 받아주어서 변수에 할당해야 웹페이지에서 볼 수 있다.

//res(리스폰)이 2개면 오류가 날 수도 있다.
//앞에 return이나 else를 붙여 하나만 실행되도록 한다

/* get방식의 메소드
a href / location.href / method */

~라우터에서~
router.post("/login_check", ctrl.loginCheck)
//포스트 방식은 포스트로 받아준다.


<form action="/session/login_check" method="post">
        <!--기본 메소드는 겟방식, 하지만 비밀 정보는 포스트를 쓴다-->



render 빼고는 다 /로 시작한다고 본다

/를 쓰면 절대경로로 포트넘버 다음으로 내가 적은게 들어가고
/없이 session/cart 같이 입력하면 현제 있는 경로의 맨 마지막만 바꾸게 된다.
<a href =""> 에 어떻게 쓸지 모르겠다면 해당 웹페이지의 경로를 전부 복붙해도 된다


sql plus
사용자명 system / 비밀번호 oracle > 처음 파일 실행시킬때
create user C##java1 identified by 1234;
C##jave1 > 아이디 / 1234 > 비밀번호